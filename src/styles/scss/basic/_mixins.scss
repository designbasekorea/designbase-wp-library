/**
 * DesignBase Frontend Kit - 믹스인
 * 재사용 가능한 SCSS 믹스인들을 정의
 */

// ============================================================================
// 플렉스 믹스인
// ============================================================================

@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flex-around {
    display: flex;
    align-items: center;
    justify-content: space-around;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

@mixin flex-column-center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

// ============================================================================
// 그리드 믹스인
// ============================================================================

@mixin grid($columns: 1, $gap: $spacing-4) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

@mixin grid-responsive($columns: 1, $gap: $spacing-4) {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: $gap;
}

// ============================================================================
// 반응형 믹스인
// ============================================================================

@mixin respond-to($breakpoint) {
    @if $breakpoint ==xs {
        @media (min-width: 0) {
            @content;
        }
    }

    @else if $breakpoint ==sm {
        @media (min-width: 576px) {
            @content;
        }
    }

    @else if $breakpoint ==md {
        @media (min-width: 768px) {
            @content;
        }
    }

    @else if $breakpoint ==lg {
        @media (min-width: 992px) {
            @content;
        }
    }

    @else if $breakpoint ==xl {
        @media (min-width: 1200px) {
            @content;
        }
    }

    @else if $breakpoint ==xxl {
        @media (min-width: 1400px) {
            @content;
        }
    }
}

@mixin respond-below($breakpoint) {
    @if $breakpoint ==sm {
        @media (max-width: 575px) {
            @content;
        }
    }

    @else if $breakpoint ==md {
        @media (max-width: 767px) {
            @content;
        }
    }

    @else if $breakpoint ==lg {
        @media (max-width: 991px) {
            @content;
        }
    }

    @else if $breakpoint ==xl {
        @media (max-width: 1199px) {
            @content;
        }
    }

    @else if $breakpoint ==xxl {
        @media (max-width: 1399px) {
            @content;
        }
    }
}

// ============================================================================
// 타이포그래피 믹스인
// ============================================================================

@mixin text-style($size: base, $weight: normal, $line-height: base) {
    font-size: var(--font-size-#{$size}, $font-size-base);
    font-weight: var(--font-weight-#{$weight}, $font-weight-normal);
    line-height: var(--line-height-#{$line-height}, $line-height-base);
}

@mixin heading($level: 1) {
    @if $level ==1 {
        font-size: $font-size-xxl;
        font-weight: $font-weight-bold;
        line-height: $line-height-tight;
    }

    @else if $level ==2 {
        font-size: $font-size-xl;
        font-weight: $font-weight-semibold;
        line-height: $line-height-tight;
    }

    @else if $level ==3 {
        font-size: $font-size-l;
        font-weight: $font-weight-semibold;
        line-height: $line-height-tight;
    }

    @else if $level ==4 {
        font-size: $font-size-m;
        font-weight: $font-weight-medium;
        line-height: $line-height-base;
    }

    @else if $level ==5 {
        font-size: $font-size-base;
        font-weight: $font-weight-medium;
        line-height: $line-height-base;
    }

    @else if $level ==6 {
        font-size: $font-size-s;
        font-weight: $font-weight-medium;
        line-height: $line-height-base;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
}

// ============================================================================
// 색상 믹스인
// ============================================================================

@mixin theme-colors($theme: light) {
    @if $theme ==light {
        --text-primary: #{$text-primary};
        --text-secondary: #{$text-secondary};
        --text-muted: #{$text-muted};
        --bg-primary: #{$bg-primary};
        --bg-secondary: #{$bg-secondary};
        --border-color: #{$border-color};
    }

    @else if $theme ==dark {
        --text-primary: #{$white};
        --text-secondary: #{$gray-300};
        --text-muted: #{$gray-400};
        --bg-primary: #{$gray-900};
        --bg-secondary: #{$gray-800};
        --border-color: #{$gray-700};
    }
}

@mixin color-variant($color, $variant: base) {
    @if $variant ==light {
        color: lighten($color, 20%);
    }

    @else if $variant ==dark {
        color: darken($color, 20%);
    }

    @else {
        color: $color;
    }
}

// ============================================================================
// 그림자 믹스인
// ============================================================================

@mixin shadow($level: 1) {
    @if $level ==1 {
        box-shadow: 0 0.125rem 0.25rem rgba($black, 0.075);
    }

    @else if $level ==2 {
        box-shadow: 0 0.25rem 0.5rem rgba($black, 0.1);
    }

    @else if $level ==3 {
        box-shadow: 0 0.5rem 1rem rgba($black, 0.15);
    }

    @else if $level ==4 {
        box-shadow: 0 1rem 2rem rgba($black, 0.2);
    }

    @else if $level ==5 {
        box-shadow: 0 2rem 4rem rgba($black, 0.25);
    }
}

@mixin shadow-hover($level: 1) {
    transition: box-shadow 0.3s ease;

    &:hover {
        @include shadow($level + 1);
    }
}

// ============================================================================
// 애니메이션 믹스인
// ============================================================================

@mixin transition($properties: all, $duration: 0.3s, $timing: ease-in-out) {
    transition: $properties $duration $timing;
}

@mixin fade-in($duration: 0.3s) {
    opacity: 0;
    animation: fadeIn $duration ease-in-out forwards;
}

@mixin slide-in($direction: up, $duration: 0.3s) {
    @if $direction ==up {
        transform: translateY(20px);
        opacity: 0;
        animation: slideInUp $duration ease-out forwards;
    }

    @else if $direction ==down {
        transform: translateY(-20px);
        opacity: 0;
        animation: slideInDown $duration ease-out forwards;
    }

    @else if $direction ==left {
        transform: translateX(20px);
        opacity: 0;
        animation: slideInLeft $duration ease-out forwards;
    }

    @else if $direction ==right {
        transform: translateX(-20px);
        opacity: 0;
        animation: slideInRight $duration ease-out forwards;
    }
}

// ============================================================================
// 포커스 믹스인
// ============================================================================

@mixin focus-ring($color: $primary, $width: 2px, $offset: 2px) {
    &:focus {
        outline: $width solid $color;
        outline-offset: $offset;
    }

    &:focus:not(:focus-visible) {
        outline: none;
    }
}

@mixin focus-visible($color: $primary, $width: 2px, $offset: 2px) {
    &:focus-visible {
        outline: $width solid $color;
        outline-offset: $offset;
    }
}

// ============================================================================
// 접근성 믹스인
// ============================================================================

@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@mixin sr-only-focusable {

    &:active,
    &:focus {
        position: static;
        width: auto;
        height: auto;
        overflow: visible;
        clip: auto;
        white-space: normal;
    }
}

// ============================================================================
// 유틸리티 믹스인
// ============================================================================

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin truncate-multiline($lines: 2) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin aspect-ratio($width: 16, $height: 9) {
    position: relative;

    &::before {
        content: "";
        display: block;
        padding-top: percentage($height / $width);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

// ============================================================================
// 키프레임 애니메이션
// ============================================================================

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(20px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInDown {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(20px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(-20px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}